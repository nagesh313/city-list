on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
env:
  HEROKU_API_KEY: ${{secrets.HEROKU_API_KEY}}
jobs:
  build-frontend:
    defaults:
      run:
        working-directory: city-list-frontend
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 14.x ]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: city-list-frontend/package-lock.json
      - run: npm install
      - run: npm run build
      - uses: actions/upload-artifact@master
        with:
          name: frontend-build
          path: city-list-frontend/build/**/*
  build-backend:
    runs-on: ubuntu-latest
    needs: ["build-frontend" ]
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
      - uses: actions/download-artifact@master
        with:
          name: frontend-build
          path: frontend-build
      - run: mkdir src/main/resources/static
      - run: cp -r frontend-build/* src/main/resources/static/
      - name: Package with Maven
        run: mvn package
      - uses: actions/upload-artifact@master
        with:
          name: backend-build
          path: target/city-list-backend-0.0.1-SNAPSHOT.jar
  deploy-to-heroku:
    needs: ["build-backend"]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 14.x ]
    steps:
      - uses: actions/download-artifact@master
        with:
          name: backend-build
          path: backend-build
#      - uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
 #     - run: "npm install -g heroku"
      - run: "heroku plugins:install java"
      - run: "heroku deploy:jar backend-build/city-list-backend-0.0.1-SNAPSHOT.jar --app city-list"
 #       with:
 #         heroku_api_key: ${{secrets.HEROKU_API_KEY}}
 #         heroku_app_name: "city-list"
 #         heroku_email: "nagesh3.13@gmail.com"
 #         procfile: "web: java $JAVA_OPTS -Dserver.port=$PORT -jar backend-build/*.jar"
  sonar-frontend:
    defaults:
      run:
        working-directory: city-list-frontend
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 14.x ]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: city-list-frontend/package-lock.json
      - run: npm install
      - run: npm run test:coverage
      - name: Official SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v1.2.0
        with:
          projectBaseDir: city-list-frontend
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
  sonar-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
      - name: Clean Test Package with Maven
        run: mvn clean install
      - name: Official SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v1.2.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
