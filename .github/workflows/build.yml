on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  build-frontend:
    defaults:
      run:
        working-directory: city-list-frontend
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 14.x ]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: city-list-frontend/package-lock.json
      - run: npm install
      - run: npm run build
#      - run: npm run test:coverage
#      - name: Official SonarQube Scan
#        uses: SonarSource/sonarqube-scan-action@v1.2.0
#        with:
#          projectBaseDir: city-list-frontend
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      - uses: actions/upload-artifact@master
        with:
          name: frontend-build
          path: city-list-frontend/build/**/*
  build-backend:
    runs-on: ubuntu-latest
    needs: ["build-frontend" ]
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Clean Test Package with Maven
      run: mvn clean install
    - uses: actions/download-artifact@master
      with:
        name: frontend-build
        path: frontend-build
    - run: ls     
    - run: ls target
    - run: ls target    
    - run: ls target/classes/static
    - run: cp frontend-build/* target/static/
    - name: Package with Maven
      run: mvn package
#    - name: Official SonarQube Scan
#      uses: SonarSource/sonarqube-scan-action@v1.2.0
#      env:
#        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
    - uses: actions/upload-artifact@master
      with:
        name: backend-build
        path: target/city-list-backend-0.0.1-SNAPSHOT.jar
